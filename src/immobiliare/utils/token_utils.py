from typing import Dict, Any
from domain import Token

def build_token_from_dict(d: Dict[str, Any]) -> Token:
    return Token(
        text=d.get("text"),
        tag=None,
        length=d.get("length"),
        n_words=d.get("n_words"),
        avg_word_length=d.get("avg_word_length"),
        n_digits=d.get("n_digits"),
        n_uppercase=d.get("n_uppercase"),
        n_periods=d.get("n_periods"),
        n_special_chars=d.get("n_special_chars"),
        n_sentences=d.get("n_sentences"),
        is_numeric_token=d.get("is_numeric_token"),
        is_mixed_alphanum=d.get("is_mixed_alphanum"),
        n_parents=d.get("n_parents"),
        n_ancestors_with_class=d.get("n_ancestors_with_class"),
        n_ancestors_with_id=d.get("n_ancestors_with_id"),
        n_ancestors_div=d.get("n_ancestors_div"),
        n_ancestors_section=d.get("n_ancestors_section"),
        has_grandparent=d.get("has_grandparent"),
        n_children=d.get("n_children"),
        n_descendants=d.get("n_descendants"),
        max_child_depth=d.get("max_child_depth"),
        has_only_text_children=d.get("has_only_text_children"),
        n_siblings=d.get("n_siblings"),
        tag_index_among_siblings=d.get("tag_index_among_siblings"),
        n_siblings_with_text=d.get("n_siblings_with_text"),
        avg_sibling_text_length=d.get("avg_sibling_text_length"),
        n_unique_tags_among_siblings=d.get("n_unique_tags_among_siblings"),
        relative_position=d.get("relative_position"),
        relative_depth_ratio=d.get("relative_depth_ratio"),
        text_density=d.get("text_density"),
        normalized_token_length=d.get("normalized_token_length"),
        percentile_token_length=d.get("percentile_token_length"),
        token_distance_to_next=d.get("token_distance_to_next"),
        token_distance_to_prev=d.get("token_distance_to_prev"),
        has_style_attribute=d.get("has_style_attribute"),
        n_style_properties=d.get("n_style_properties"),
        font_size_extracted=d.get("font_size_extracted"),
        margin_top_extracted=d.get("margin_top_extracted"),
        display_type_code=d.get("display_type_code"),
        parent_tag_token_count=d.get("parent_tag_token_count"),
        n_child_tokens_with_digits=d.get("n_child_tokens_with_digits"),
        n_descendants_with_digits=d.get("n_descendants_with_digits"),
        n_descendants_with_links=d.get("n_descendants_with_links"),
        n_descendants_with_buttons=d.get("n_descendants_with_buttons"),
        token_repeated_in_page=d.get("token_repeated_in_page"),
        n_classes=d.get("n_classes"),
        class_name_length_avg=d.get("class_name_length_avg"),
        id_name_length=d.get("id_name_length"),
        dom_path_length=d.get("dom_path_length"),
        window_mean_length=d.get("window_mean_length"),
        window_std_length=d.get("window_std_length"),
        window_mean_avg_word_length=d.get("window_mean_avg_word_length"),
        window_std_avg_word_length=d.get("window_std_avg_word_length"),
        is_link=d.get("is_link"),
        link_href_depth=d.get("link_href_depth"),
        css_title_score=d.get("css_title_score"),
        capital_ratio=d.get("capital_ratio"),
        keyword_score_title=d.get("keyword_score_title"),
        char_entropy=d.get("char_entropy"),
        length_zscore=d.get("length_zscore"),
        n_words_zscore=d.get("n_words_zscore"),
        tf_log=d.get("tf_log"),
        distinct_ratio=d.get("distinct_ratio"),
        uniq_ratio=d.get("uniq_ratio"),
        vowel_ratio=d.get("vowel_ratio"),
        cv_balance=d.get("cv_balance"),
        max_digit_run=d.get("max_digit_run"),
        uniq_bigram_ratio=d.get("uniq_bigram_ratio"),
        neigh_len_diff=d.get("neigh_len_diff"),
        cap_run_norm=d.get("cap_run_norm"),
        length_is_local_max=d.get("length_is_local_max"),
        length_peak_prominence=d.get("length_peak_prominence"),
        length_gradient_sign=d.get("length_gradient_sign"),
        length_rank_in_block=d.get("length_rank_in_block"),
        length_z_to_block_median=d.get("length_z_to_block_median"),
        dist_from_last_price_token=d.get("dist_from_last_price_token"),
        is_between_price_and_locali=d.get("is_between_price_and_locali"),
        block_text_token_density=d.get("block_text_token_density"),
        block_tag_density=d.get("block_tag_density"),
        ancestors_avg_tag_density=d.get("ancestors_avg_tag_density"),
        descendants_text_density=d.get("descendants_text_density"),
        sibling_text_density=d.get("sibling_text_density"),
        text_ratio_in_block=d.get("text_ratio_in_block"),
        tag_ratio_in_block=d.get("tag_ratio_in_block"),
        block_avg_word_length=d.get("block_avg_word_length"),
        block_std_word_length=d.get("block_std_word_length"),
        block_avg_sentence_count=d.get("block_avg_sentence_count"),
        ancestors_text_density_variance=d.get("ancestors_text_density_variance"),
        descendants_link_density=d.get("descendants_link_density"),
        descendants_img_density=d.get("descendants_img_density"),
        block_special_char_density=d.get("block_special_char_density"),
        block_digit_density=d.get("block_digit_density"),
        token_dist_to_block_mid=d.get("token_dist_to_block_mid"),
        block_token_count=d.get("block_token_count"),
        block_depth_wtd_token_den=d.get("block_depth_wtd_token_den"),
        siblings_tag_density=d.get("siblings_tag_density"),
        local_subtree_height=d.get("local_subtree_height"),
        parent_child_ratio=d.get("parent_child_ratio"),
        block_text_length_ratio=d.get("block_text_length_ratio"),
        local_token_rep_density=d.get("local_token_rep_density"),
        block_avg_token_distance=d.get("block_avg_token_distance"),
        normalized_block_area=d.get("normalized_block_area"),
        meta=d.get("meta"),
    )

def serialize_tokens(page_tokens: list[Token], filename: str) -> list[dict[str, Any]]:
    return [
        {
            "text": tok.text,
            #"tag": str(tok.tag) if tok.tag else None,
            "position": tok.position,
            "length": tok.length,
            "n_words": tok.n_words,
            "avg_word_length": tok.avg_word_length,
            "n_digits": tok.n_digits,
            "n_uppercase": tok.n_uppercase,
            "n_lowercase": tok.n_lowercase,
            "n_punctuation": tok.n_punctuation,
            "n_commas": tok.n_commas,
            "n_periods": tok.n_periods,
            "n_special_chars": tok.n_special_chars,
            "n_sentences": tok.n_sentences,
            "is_numeric_token": tok.is_numeric_token,
            "is_mixed_alphanum": tok.is_mixed_alphanum,
            "n_parents": tok.n_parents,
            "n_total_ancestors": tok.n_total_ancestors,
            "n_ancestors_with_class": tok.n_ancestors_with_class,
            "n_ancestors_with_id": tok.n_ancestors_with_id,
            "n_ancestors_div": tok.n_ancestors_div,
            "n_ancestors_section": tok.n_ancestors_section,
            "has_grandparent": tok.has_grandparent,
            "n_children": tok.n_children,
            "n_descendants": tok.n_descendants,
            "max_child_depth": tok.max_child_depth,
            "has_only_text_children": tok.has_only_text_children,
            "n_siblings": tok.n_siblings,
            "tag_index_among_siblings": tok.tag_index_among_siblings,
            "n_siblings_with_text": tok.n_siblings_with_text,
            "avg_sibling_text_length": tok.avg_sibling_text_length,
            "n_unique_tags_among_siblings": tok.n_unique_tags_among_siblings,
            "depth_in_dom": tok.depth_in_dom,
            "position_in_block": tok.position_in_block,
            "relative_position": tok.relative_position,
            "relative_depth_ratio": tok.relative_depth_ratio,
            "text_density": tok.text_density,
            "normalized_token_length": tok.normalized_token_length,
            "percentile_token_length": tok.percentile_token_length,
            "token_distance_to_next": tok.token_distance_to_next,
            "token_distance_to_prev": tok.token_distance_to_prev,
            "has_style_attribute": tok.has_style_attribute,
            "n_style_properties": tok.n_style_properties,
            "font_size_extracted": tok.font_size_extracted,
            "margin_top_extracted": tok.margin_top_extracted,
            "display_type_code": tok.display_type_code,
            "parent_tag_token_count": tok.parent_tag_token_count,
            "parent_token_length": tok.parent_token_length,
            "n_child_tokens_with_digits": tok.n_child_tokens_with_digits,
            "n_descendants_with_digits": tok.n_descendants_with_digits,
            "n_descendants_with_links": tok.n_descendants_with_links,
            "n_descendants_with_buttons": tok.n_descendants_with_buttons,
            "token_repeated_in_page": tok.token_repeated_in_page,
            "n_classes": tok.n_classes,
            "class_name_length_avg": tok.class_name_length_avg,
            "id_name_length": tok.id_name_length,
            "dom_path_length": tok.dom_path_length,
            "window_mean_length": tok.window_mean_length,
            "window_std_length": tok.window_std_length,
            "window_mean_avg_word_length": tok.window_mean_avg_word_length,
            "window_std_avg_word_length": tok.window_std_avg_word_length,
            "is_link": tok.is_link,
            "link_href_depth": tok.link_href_depth,
            "css_title_score": tok.css_title_score,
            "capital_ratio": tok.capital_ratio,
            "keyword_score_title": tok.keyword_score_title,
            "char_entropy": tok.char_entropy,
            "length_zscore": tok.length_zscore,
            "n_words_zscore": tok.n_words_zscore,
            "tf_log": tok.tf_log,
            "distinct_ratio": tok.distinct_ratio,
            "uniq_ratio": tok.uniq_ratio,
            "vowel_ratio": tok.vowel_ratio,
            "cv_balance": tok.cv_balance,
            "max_digit_run": tok.max_digit_run,
            "uniq_bigram_ratio": tok.uniq_bigram_ratio,
            "neigh_len_diff": tok.neigh_len_diff,
            "tfidf_score": tok.tfidf_score,
            "cap_run_norm": tok.cap_run_norm,
            "length_is_local_max": tok.length_is_local_max,
            "length_peak_prominence": tok.length_peak_prominence,
            "length_gradient_sign": tok.length_gradient_sign,
            "length_rank_in_block": tok.length_rank_in_block,
            "length_z_to_block_median": tok.length_z_to_block_median,
            "dist_from_last_price_token": tok.dist_from_last_price_token,
            "is_between_price_and_locali": tok.is_between_price_and_locali,
            "block_text_token_density": tok.block_text_token_density,
            "block_tag_density": tok.block_tag_density,
            "ancestors_avg_tag_density": tok.ancestors_avg_tag_density,
            "descendants_text_density": tok.descendants_text_density,
            "sibling_text_density": tok.sibling_text_density,
            "text_ratio_in_block": tok.text_ratio_in_block,
            "tag_ratio_in_block": tok.tag_ratio_in_block,
            "block_avg_word_length": tok.block_avg_word_length,
            "block_std_word_length": tok.block_std_word_length,
            "block_avg_sentence_count": tok.block_avg_sentence_count,
            "ancestors_text_density_variance": tok.ancestors_text_density_variance,
            "descendants_link_density": tok.descendants_link_density,
            "descendants_img_density": tok.descendants_img_density,
            "block_special_char_density": tok.block_special_char_density,
            "block_digit_density": tok.block_digit_density,
            "token_dist_to_block_mid": tok.token_dist_to_block_mid,
            "block_token_count": tok.block_token_count,
            "block_depth_wtd_token_den": tok.block_depth_wtd_token_den,
            "siblings_tag_density": tok.siblings_tag_density,
            "local_subtree_height": tok.local_subtree_height,
            "parent_child_ratio": tok.parent_child_ratio,
            "block_text_length_ratio": tok.block_text_length_ratio,
            "local_token_rep_density": tok.local_token_rep_density,
            "block_avg_token_distance": tok.block_avg_token_distance,
            "normalized_block_area": tok.normalized_block_area,
            "meta": {**(tok.meta or {}), "filename": filename}
        }
        for tok in page_tokens
    ]